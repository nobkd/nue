
<div :is="counter" class="demo card">
  <h3>You clicked {count} times!</h3>
  <button :onclick="count--">Decrement</button>
  <button :onclick="count++">Increment</button>
  <script>count = 0</script>
</div>

<div  :is="simple-counter" class="demo card">
  <button :onclick="count++">
    Clicked { count } { count == 1 ? 'time' : 'times' }
  </button>

  <script>this.count = 0</script>
</div>

<div :is="reactive-loop" class="demo card">

  <p>
    <button :onclick="addFruit">Add</button>
    <button :onclick="images.pop()" :disabled="!images[4]">Remove</button>
  </p>

  <img :for="img in images" :src="/img/{img}.jpg">

  <script>
    this.images = ['popcorn', 'peas', 'lemons', 'tomatoes']

    addFruit() {
      const img = this.images[Math.floor(Math.random() * 4)]
      this.images.push(img)
    }
  </script>
</div>


<div :is="user-update" class="demo card">
  <img :src="user.avatar">
  <h3>${ user.name }</h3>
  <p>${ user.email }</p>

  <button :onclick="loadJane" :disabled="is_loaded">Load Jane</button>

  <script>
    this.user = {
      avatar: '/img/face-4.jpg',
      email: 'john@acme.org',
      name: 'John Doe',
    }

    async loadJane() {
      const req = await fetch('jane.json')
      this.user = await req.json()
      this.is_loaded = true
      this.update()
    }
  </script>
</div>
